{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOCTOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "doctors",
      "outputs": [
        {
          "internalType": "string",
          "name": "doctorName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "contactInfo",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_doctorName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contactInfo",
          "type": "string"
        }
      ],
      "name": "registerDoctor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001c600033610021565b6100cd565b61002b828261002f565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1661002b576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556100893390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610bfa806100dc6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806391d148541161006657806391d1485414610137578063a217fddf1461014a578063a9583c2214610152578063d547741f14610173578063fec331f21461018657600080fd5b806301ffc9a7146100a3578063248a9ca3146100cb5780632f2ff15d146100fc57806336568abe14610111578063833b46bb14610124575b600080fd5b6100b66100b136600461075c565b6101ad565b60405190151581526020015b60405180910390f35b6100ee6100d9366004610786565b60009081526020819052604090206001015490565b6040519081526020016100c2565b61010f61010a3660046107bb565b6101e4565b005b61010f61011f3660046107bb565b61020e565b61010f61013236600461088a565b610291565b6100b66101453660046107bb565b6102de565b6100ee600081565b6101656101603660046108ee565b610307565b6040516100c2929190610959565b61010f6101813660046107bb565b610433565b6100ee7f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f81565b60006001600160e01b03198216637965db0b60e01b14806101de57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000828152602081905260409020600101546101ff81610458565b6102098383610465565b505050565b6001600160a01b03811633146102835760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61028d82826104e9565b5050565b6040805180820182528381526020808201849052336000908152600190915291909120815181906102c29082610a0f565b50602082015160018201906102d79082610a0f565b5050505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60016020526000908152604090208054819061032290610987565b80601f016020809104026020016040519081016040528092919081815260200182805461034e90610987565b801561039b5780601f106103705761010080835404028352916020019161039b565b820191906000526020600020905b81548152906001019060200180831161037e57829003601f168201915b5050505050908060010180546103b090610987565b80601f01602080910402602001604051908101604052809291908181526020018280546103dc90610987565b80156104295780601f106103fe57610100808354040283529160200191610429565b820191906000526020600020905b81548152906001019060200180831161040c57829003601f168201915b5050505050905082565b60008281526020819052604090206001015461044e81610458565b61020983836104e9565b610462813361054e565b50565b61046f82826102de565b61028d576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556104a53390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6104f382826102de565b1561028d576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b61055882826102de565b61028d57610565816105a7565b6105708360206105b9565b604051602001610581929190610acf565b60408051601f198184030181529082905262461bcd60e51b825261027a91600401610b44565b60606101de6001600160a01b03831660145b606060006105c8836002610b6d565b6105d3906002610b84565b67ffffffffffffffff8111156105eb576105eb6107e7565b6040519080825280601f01601f191660200182016040528015610615576020820181803683370190505b509050600360fc1b8160008151811061063057610630610b97565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061065f5761065f610b97565b60200101906001600160f81b031916908160001a9053506000610683846002610b6d565b61068e906001610b84565b90505b6001811115610706576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106106c2576106c2610b97565b1a60f81b8282815181106106d8576106d8610b97565b60200101906001600160f81b031916908160001a90535060049490941c936106ff81610bad565b9050610691565b5083156107555760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161027a565b9392505050565b60006020828403121561076e57600080fd5b81356001600160e01b03198116811461075557600080fd5b60006020828403121561079857600080fd5b5035919050565b80356001600160a01b03811681146107b657600080fd5b919050565b600080604083850312156107ce57600080fd5b823591506107de6020840161079f565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261080e57600080fd5b813567ffffffffffffffff80821115610829576108296107e7565b604051601f8301601f19908116603f01168101908282118183101715610851576108516107e7565b8160405283815286602085880101111561086a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561089d57600080fd5b823567ffffffffffffffff808211156108b557600080fd5b6108c1868387016107fd565b935060208501359150808211156108d757600080fd5b506108e4858286016107fd565b9150509250929050565b60006020828403121561090057600080fd5b6107558261079f565b60005b8381101561092457818101518382015260200161090c565b50506000910152565b60008151808452610945816020860160208601610909565b601f01601f19169290920160200192915050565b60408152600061096c604083018561092d565b828103602084015261097e818561092d565b95945050505050565b600181811c9082168061099b57607f821691505b6020821081036109bb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561020957600081815260208120601f850160051c810160208610156109e85750805b601f850160051c820191505b81811015610a07578281556001016109f4565b505050505050565b815167ffffffffffffffff811115610a2957610a296107e7565b610a3d81610a378454610987565b846109c1565b602080601f831160018114610a725760008415610a5a5750858301515b600019600386901b1c1916600185901b178555610a07565b600085815260208120601f198616915b82811015610aa157888601518255948401946001909101908401610a82565b5085821015610abf5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610b07816017850160208801610909565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610b38816028840160208801610909565b01602801949350505050565b602081526000610755602083018461092d565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176101de576101de610b57565b808201808211156101de576101de610b57565b634e487b7160e01b600052603260045260246000fd5b600081610bbc57610bbc610b57565b50600019019056fea2646970667358221220ba1796728aba118fbb270e8c1eff274f9503c1eeff338b12ce78f243db0fd88664736f6c63430008130033",
    "sourceMap": "475:801:0:-:0;;;585:73;;;;;;;;;-1:-1:-1;609:42:0;2198:4:2;640:10:0;609;:42::i;:::-;475:801;;6937:110:2;7015:25;7026:4;7032:7;7015:10;:25::i;:::-;6937:110;;:::o;7587:233::-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:2;;;;;;;;;;;;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:2;;;;;;;;;:36;;-1:-1:-1;;7708:36:2;7740:4;7708:36;;;7790:12;719:10:13;;640:96;7790:12:2;-1:-1:-1;;;;;7763:40:2;7781:7;-1:-1:-1;;;;;7763:40:2;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;475:801:0:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c806391d148541161006657806391d1485414610137578063a217fddf1461014a578063a9583c2214610152578063d547741f14610173578063fec331f21461018657600080fd5b806301ffc9a7146100a3578063248a9ca3146100cb5780632f2ff15d146100fc57806336568abe14610111578063833b46bb14610124575b600080fd5b6100b66100b136600461075c565b6101ad565b60405190151581526020015b60405180910390f35b6100ee6100d9366004610786565b60009081526020819052604090206001015490565b6040519081526020016100c2565b61010f61010a3660046107bb565b6101e4565b005b61010f61011f3660046107bb565b61020e565b61010f61013236600461088a565b610291565b6100b66101453660046107bb565b6102de565b6100ee600081565b6101656101603660046108ee565b610307565b6040516100c2929190610959565b61010f6101813660046107bb565b610433565b6100ee7f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f81565b60006001600160e01b03198216637965db0b60e01b14806101de57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000828152602081905260409020600101546101ff81610458565b6102098383610465565b505050565b6001600160a01b03811633146102835760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61028d82826104e9565b5050565b6040805180820182528381526020808201849052336000908152600190915291909120815181906102c29082610a0f565b50602082015160018201906102d79082610a0f565b5050505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60016020526000908152604090208054819061032290610987565b80601f016020809104026020016040519081016040528092919081815260200182805461034e90610987565b801561039b5780601f106103705761010080835404028352916020019161039b565b820191906000526020600020905b81548152906001019060200180831161037e57829003601f168201915b5050505050908060010180546103b090610987565b80601f01602080910402602001604051908101604052809291908181526020018280546103dc90610987565b80156104295780601f106103fe57610100808354040283529160200191610429565b820191906000526020600020905b81548152906001019060200180831161040c57829003601f168201915b5050505050905082565b60008281526020819052604090206001015461044e81610458565b61020983836104e9565b610462813361054e565b50565b61046f82826102de565b61028d576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556104a53390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6104f382826102de565b1561028d576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b61055882826102de565b61028d57610565816105a7565b6105708360206105b9565b604051602001610581929190610acf565b60408051601f198184030181529082905262461bcd60e51b825261027a91600401610b44565b60606101de6001600160a01b03831660145b606060006105c8836002610b6d565b6105d3906002610b84565b67ffffffffffffffff8111156105eb576105eb6107e7565b6040519080825280601f01601f191660200182016040528015610615576020820181803683370190505b509050600360fc1b8160008151811061063057610630610b97565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061065f5761065f610b97565b60200101906001600160f81b031916908160001a9053506000610683846002610b6d565b61068e906001610b84565b90505b6001811115610706576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106106c2576106c2610b97565b1a60f81b8282815181106106d8576106d8610b97565b60200101906001600160f81b031916908160001a90535060049490941c936106ff81610bad565b9050610691565b5083156107555760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161027a565b9392505050565b60006020828403121561076e57600080fd5b81356001600160e01b03198116811461075557600080fd5b60006020828403121561079857600080fd5b5035919050565b80356001600160a01b03811681146107b657600080fd5b919050565b600080604083850312156107ce57600080fd5b823591506107de6020840161079f565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261080e57600080fd5b813567ffffffffffffffff80821115610829576108296107e7565b604051601f8301601f19908116603f01168101908282118183101715610851576108516107e7565b8160405283815286602085880101111561086a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561089d57600080fd5b823567ffffffffffffffff808211156108b557600080fd5b6108c1868387016107fd565b935060208501359150808211156108d757600080fd5b506108e4858286016107fd565b9150509250929050565b60006020828403121561090057600080fd5b6107558261079f565b60005b8381101561092457818101518382015260200161090c565b50506000910152565b60008151808452610945816020860160208601610909565b601f01601f19169290920160200192915050565b60408152600061096c604083018561092d565b828103602084015261097e818561092d565b95945050505050565b600181811c9082168061099b57607f821691505b6020821081036109bb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561020957600081815260208120601f850160051c810160208610156109e85750805b601f850160051c820191505b81811015610a07578281556001016109f4565b505050505050565b815167ffffffffffffffff811115610a2957610a296107e7565b610a3d81610a378454610987565b846109c1565b602080601f831160018114610a725760008415610a5a5750858301515b600019600386901b1c1916600185901b178555610a07565b600085815260208120601f198616915b82811015610aa157888601518255948401946001909101908401610a82565b5085821015610abf5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610b07816017850160208801610909565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610b38816028840160208801610909565b01602801949350505050565b602081526000610755602083018461092d565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176101de576101de610b57565b808201808211156101de576101de610b57565b634e487b7160e01b600052603260045260246000fd5b600081610bbc57610bbc610b57565b50600019019056fea2646970667358221220ba1796728aba118fbb270e8c1eff274f9503c1eeff338b12ce78f243db0fd88664736f6c63430008130033",
    "sourceMap": "475:801:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:2;;;;;;:::i;:::-;;:::i;:::-;;;470:14:21;;463:22;445:41;;433:2;418:18;2732:202:2;;;;;;;;4504:129;;;;;;:::i;:::-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129;;;;828:25:21;;;816:2;801:18;4504:129:2;682:177:21;4929:145:2;;;;;;:::i;:::-;;:::i;:::-;;6038:214;;;;;;:::i;:::-;;:::i;794:182:0:-;;;;;;:::i;:::-;;:::i;3021:145:2:-;;;;;;:::i;:::-;;:::i;2153:49::-;;2198:4;2153:49;;746:41:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;5354:147:2:-;;;;;;:::i;:::-;;:::i;516:62:0:-;;554:24;516:62;;2732:202:2;2817:4;-1:-1:-1;;;;;;2840:47:2;;-1:-1:-1;;;2840:47:2;;:87;;-1:-1:-1;;;;;;;;;;937:40:16;;;2891:36:2;2833:94;2732:202;-1:-1:-1;;2732:202:2:o;4929:145::-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;6038:214::-;-1:-1:-1;;;;;6133:23:2;;719:10:13;6133:23:2;6125:83;;;;-1:-1:-1;;;6125:83:2;;4017:2:21;6125:83:2;;;3999:21:21;4056:2;4036:18;;;4029:30;4095:34;4075:18;;;4068:62;-1:-1:-1;;;4146:18:21;;;4139:45;4201:19;;6125:83:2;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;794:182:0:-;936:33;;;;;;;;;;;;;;;;;;922:10;-1:-1:-1;914:19:0;;;:7;:19;;;;;;;:55;;:19;;:55;;:19;:55;:::i;:::-;-1:-1:-1;914:55:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;794:182:0:o;3021:145:2:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:2;;;;;;;;;;;;;;;3021:145::o;746:41:0:-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5354:147:2:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;3460:103::-:0;3526:30;3537:4;719:10:13;3526::2;:30::i;:::-;3460:103;:::o;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:2;;;;;;;;;:36;;-1:-1:-1;;7708:36:2;7740:4;7708:36;;;7790:12;719:10:13;;640:96;7790:12:2;-1:-1:-1;;;;;7763:40:2;7781:7;-1:-1:-1;;;;;7763:40:2;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:2;;;;;;;;;;:37;;-1:-1:-1;;8112:37:2;;;8168:40;719:10:13;;8112:12:2;;8168:40;;8144:5;8168:40;7991:234;;:::o;3844:479::-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:2;;;;;;;;;;-1:-1:-1;;;3970:336:2;;;;;;;:::i;2407:149:15:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:15;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:15;;1918:47;;-1:-1:-1;;;1975:6:15;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:15;;;;;;;;;-1:-1:-1;;;2000:6:15;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:15;;;;;;;;-1:-1:-1;2030:9:15;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:15;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:15;;;;;;;;-1:-1:-1;2141:1:15;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:15;;2162:55;;;;-1:-1:-1;;;2162:55:15;;8772:2:21;2162:55:15;;;8754:21:21;;;8791:18;;;8784:30;8850:34;8830:18;;;8823:62;8902:18;;2162:55:15;8570:356:21;2162:55:15;2241:6;1818:437;-1:-1:-1;;;1818:437:15:o;14:286:21:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:21;;209:43;;199:71;;266:1;263;256:12;497:180;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;-1:-1:-1;648:23:21;;497:180;-1:-1:-1;497:180:21:o;864:173::-;932:20;;-1:-1:-1;;;;;981:31:21;;971:42;;961:70;;1027:1;1024;1017:12;961:70;864:173;;;:::o;1042:254::-;1110:6;1118;1171:2;1159:9;1150:7;1146:23;1142:32;1139:52;;;1187:1;1184;1177:12;1139:52;1223:9;1210:23;1200:33;;1252:38;1286:2;1275:9;1271:18;1252:38;:::i;:::-;1242:48;;1042:254;;;;;:::o;1301:127::-;1362:10;1357:3;1353:20;1350:1;1343:31;1393:4;1390:1;1383:15;1417:4;1414:1;1407:15;1433:719;1476:5;1529:3;1522:4;1514:6;1510:17;1506:27;1496:55;;1547:1;1544;1537:12;1496:55;1583:6;1570:20;1609:18;1646:2;1642;1639:10;1636:36;;;1652:18;;:::i;:::-;1727:2;1721:9;1695:2;1781:13;;-1:-1:-1;;1777:22:21;;;1801:2;1773:31;1769:40;1757:53;;;1825:18;;;1845:22;;;1822:46;1819:72;;;1871:18;;:::i;:::-;1911:10;1907:2;1900:22;1946:2;1938:6;1931:18;1992:3;1985:4;1980:2;1972:6;1968:15;1964:26;1961:35;1958:55;;;2009:1;2006;1999:12;1958:55;2073:2;2066:4;2058:6;2054:17;2047:4;2039:6;2035:17;2022:54;2120:1;2113:4;2108:2;2100:6;2096:15;2092:26;2085:37;2140:6;2131:15;;;;;;1433:719;;;;:::o;2157:543::-;2245:6;2253;2306:2;2294:9;2285:7;2281:23;2277:32;2274:52;;;2322:1;2319;2312:12;2274:52;2362:9;2349:23;2391:18;2432:2;2424:6;2421:14;2418:34;;;2448:1;2445;2438:12;2418:34;2471:50;2513:7;2504:6;2493:9;2489:22;2471:50;:::i;:::-;2461:60;;2574:2;2563:9;2559:18;2546:32;2530:48;;2603:2;2593:8;2590:16;2587:36;;;2619:1;2616;2609:12;2587:36;;2642:52;2686:7;2675:8;2664:9;2660:24;2642:52;:::i;:::-;2632:62;;;2157:543;;;;;:::o;2705:186::-;2764:6;2817:2;2805:9;2796:7;2792:23;2788:32;2785:52;;;2833:1;2830;2823:12;2785:52;2856:29;2875:9;2856:29;:::i;2896:250::-;2981:1;2991:113;3005:6;3002:1;2999:13;2991:113;;;3081:11;;;3075:18;3062:11;;;3055:39;3027:2;3020:10;2991:113;;;-1:-1:-1;;3138:1:21;3120:16;;3113:27;2896:250::o;3151:271::-;3193:3;3231:5;3225:12;3258:6;3253:3;3246:19;3274:76;3343:6;3336:4;3331:3;3327:14;3320:4;3313:5;3309:16;3274:76;:::i;:::-;3404:2;3383:15;-1:-1:-1;;3379:29:21;3370:39;;;;3411:4;3366:50;;3151:271;-1:-1:-1;;3151:271:21:o;3427:383::-;3624:2;3613:9;3606:21;3587:4;3650:45;3691:2;3680:9;3676:18;3668:6;3650:45;:::i;:::-;3743:9;3735:6;3731:22;3726:2;3715:9;3711:18;3704:50;3771:33;3797:6;3789;3771:33;:::i;:::-;3763:41;3427:383;-1:-1:-1;;;;;3427:383:21:o;4231:380::-;4310:1;4306:12;;;;4353;;;4374:61;;4428:4;4420:6;4416:17;4406:27;;4374:61;4481:2;4473:6;4470:14;4450:18;4447:38;4444:161;;4527:10;4522:3;4518:20;4515:1;4508:31;4562:4;4559:1;4552:15;4590:4;4587:1;4580:15;4444:161;;4231:380;;;:::o;4742:545::-;4844:2;4839:3;4836:11;4833:448;;;4880:1;4905:5;4901:2;4894:17;4950:4;4946:2;4936:19;5020:2;5008:10;5004:19;5001:1;4997:27;4991:4;4987:38;5056:4;5044:10;5041:20;5038:47;;;-1:-1:-1;5079:4:21;5038:47;5134:2;5129:3;5125:12;5122:1;5118:20;5112:4;5108:31;5098:41;;5189:82;5207:2;5200:5;5197:13;5189:82;;;5252:17;;;5233:1;5222:13;5189:82;;;5193:3;;;4742:545;;;:::o;5463:1352::-;5589:3;5583:10;5616:18;5608:6;5605:30;5602:56;;;5638:18;;:::i;:::-;5667:97;5757:6;5717:38;5749:4;5743:11;5717:38;:::i;:::-;5711:4;5667:97;:::i;:::-;5819:4;;5883:2;5872:14;;5900:1;5895:663;;;;6602:1;6619:6;6616:89;;;-1:-1:-1;6671:19:21;;;6665:26;6616:89;-1:-1:-1;;5420:1:21;5416:11;;;5412:24;5408:29;5398:40;5444:1;5440:11;;;5395:57;6718:81;;5865:944;;5895:663;4689:1;4682:14;;;4726:4;4713:18;;-1:-1:-1;;5931:20:21;;;6049:236;6063:7;6060:1;6057:14;6049:236;;;6152:19;;;6146:26;6131:42;;6244:27;;;;6212:1;6200:14;;;;6079:19;;6049:236;;;6053:3;6313:6;6304:7;6301:19;6298:201;;;6374:19;;;6368:26;-1:-1:-1;;6457:1:21;6453:14;;;6469:3;6449:24;6445:37;6441:42;6426:58;6411:74;;6298:201;-1:-1:-1;;;;;6545:1:21;6529:14;;;6525:22;6512:36;;-1:-1:-1;5463:1352:21:o;6820:812::-;7231:25;7226:3;7219:38;7201:3;7286:6;7280:13;7302:75;7370:6;7365:2;7360:3;7356:12;7349:4;7341:6;7337:17;7302:75;:::i;:::-;-1:-1:-1;;;7436:2:21;7396:16;;;7428:11;;;7421:40;7486:13;;7508:76;7486:13;7570:2;7562:11;;7555:4;7543:17;;7508:76;:::i;:::-;7604:17;7623:2;7600:26;;6820:812;-1:-1:-1;;;;6820:812:21:o;7637:220::-;7786:2;7775:9;7768:21;7749:4;7806:45;7847:2;7836:9;7832:18;7824:6;7806:45;:::i;7862:127::-;7923:10;7918:3;7914:20;7911:1;7904:31;7954:4;7951:1;7944:15;7978:4;7975:1;7968:15;7994:168;8067:9;;;8098;;8115:15;;;8109:22;;8095:37;8085:71;;8136:18;;:::i;8167:125::-;8232:9;;;8253:10;;;8250:36;;;8266:18;;:::i;8297:127::-;8358:10;8353:3;8349:20;8346:1;8339:31;8389:4;8386:1;8379:15;8413:4;8410:1;8403:15;8429:136;8468:3;8496:5;8486:39;;8505:18;;:::i;:::-;-1:-1:-1;;;8541:18:21;;8429:136::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "DOCTOR_ROLE()": "fec331f2",
    "doctors(address)": "a9583c22",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "registerDoctor(string,string)": "833b46bb",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOCTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"doctors\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"doctorName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contactInfo\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_doctorName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contactInfo\",\"type\":\"string\"}],\"name\":\"registerDoctor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MedicalX.sol\":\"MedicalX\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/MedicalX.sol\":{\"keccak256\":\"0x4dbe14c0472ec0886afdc295999c1c20d32dae45d03947f518b7b652a457b43b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://10b2471bb77f4c30019f45a67ccea2b14406d53a91ac0787d9e30a846363809b\",\"dweb:/ipfs/Qmf28pZ7s42JZYVN1CQtWyaH9wGnNdWZYodUBEv3wVTv84\"]},\"contracts/PatientManagement.sol\":{\"keccak256\":\"0x91609bb059c879b82391454aa46079751aac8fa74666ca7a82c04faca8a687d5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9a75b0a7af0274394930d5845008aaca81b767ee439f1a07a94aeb099dbfec24\",\"dweb:/ipfs/QmYqcryW4943eAb5ffHKFzR3Lz7kTzew59e292ZfP7xbTq\"]},\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"node_modules/hardhat/console.sol\":{\"keccak256\":\"0x7434453e6d3b7d0e5d0eb7846ffdbc27f0ccf3b163591263739b628074dc103a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49355f780520494d1d5a0f01858385e51bb5280ce0ecfb960f16995065dca395\",\"dweb:/ipfs/QmSwJ6C5QLz6xKeQZS8wbwjU1KxRFTYfwbGmtzisd5sRW4\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOCTOR_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "doctors",
          "outputs": [
            {
              "internalType": "string",
              "name": "doctorName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "contactInfo",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_doctorName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contactInfo",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerDoctor"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/MedicalX.sol": "MedicalX"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/MedicalX.sol": {
        "keccak256": "0x4dbe14c0472ec0886afdc295999c1c20d32dae45d03947f518b7b652a457b43b",
        "urls": [
          "bzz-raw://10b2471bb77f4c30019f45a67ccea2b14406d53a91ac0787d9e30a846363809b",
          "dweb:/ipfs/Qmf28pZ7s42JZYVN1CQtWyaH9wGnNdWZYodUBEv3wVTv84"
        ],
        "license": "UNLICENSED"
      },
      "contracts/PatientManagement.sol": {
        "keccak256": "0x91609bb059c879b82391454aa46079751aac8fa74666ca7a82c04faca8a687d5",
        "urls": [
          "bzz-raw://9a75b0a7af0274394930d5845008aaca81b767ee439f1a07a94aeb099dbfec24",
          "dweb:/ipfs/QmYqcryW4943eAb5ffHKFzR3Lz7kTzew59e292ZfP7xbTq"
        ],
        "license": "UNLICENSED"
      },
      "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
        "keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
        "urls": [
          "bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
          "dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a",
        "urls": [
          "bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb",
          "dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol": {
        "keccak256": "0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4",
        "urls": [
          "bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6",
          "dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol": {
        "keccak256": "0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c",
        "urls": [
          "bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8",
          "dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff",
        "urls": [
          "bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005",
          "dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
        "keccak256": "0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37",
        "urls": [
          "bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f",
          "dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "node_modules/hardhat/console.sol": {
        "keccak256": "0x7434453e6d3b7d0e5d0eb7846ffdbc27f0ccf3b163591263739b628074dc103a",
        "urls": [
          "bzz-raw://49355f780520494d1d5a0f01858385e51bb5280ce0ecfb960f16995065dca395",
          "dweb:/ipfs/QmSwJ6C5QLz6xKeQZS8wbwjU1KxRFTYfwbGmtzisd5sRW4"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/MedicalX.sol",
    "id": 84,
    "exportedSymbols": {
      "AccessControl": [
        481
      ],
      "Address": [
        2156
      ],
      "Context": [
        2178
      ],
      "Counters": [
        2252
      ],
      "ERC165": [
        2505
      ],
      "ERC721": [
        1509
      ],
      "ERC721URIStorage": [
        1799
      ],
      "IAccessControl": [
        554
      ],
      "IERC165": [
        2517
      ],
      "IERC4906": [
        579
      ],
      "IERC721": [
        1625
      ],
      "IERC721Metadata": [
        1826
      ],
      "IERC721Receiver": [
        1643
      ],
      "IPatientManagement": [
        12
      ],
      "Math": [
        3383
      ],
      "MedicalX": [
        83
      ],
      "PatientManagement": [
        165
      ],
      "SignedMath": [
        3488
      ],
      "Strings": [
        2481
      ],
      "console": [
        11573
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1238:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "39:24:0",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "65:52:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 84,
        "sourceUnit": 2253,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "118:78:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 84,
        "sourceUnit": 1800,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4,
        "nodeType": "ImportDirective",
        "src": "197:57:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 84,
        "sourceUnit": 1510,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "255:58:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 84,
        "sourceUnit": 482,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6,
        "nodeType": "ImportDirective",
        "src": "314:29:0",
        "nodes": [],
        "absolutePath": "node_modules/hardhat/console.sol",
        "file": "hardhat/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 84,
        "sourceUnit": 11574,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8,
        "nodeType": "ImportDirective",
        "src": "344:58:0",
        "nodes": [],
        "absolutePath": "contracts/PatientManagement.sol",
        "file": "./PatientManagement.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 84,
        "sourceUnit": 166,
        "symbolAliases": [
          {
            "foreign": {
              "id": 7,
              "name": "PatientManagement",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 165,
              "src": "352:17:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12,
        "nodeType": "ContractDefinition",
        "src": "404:69:0",
        "nodes": [
          {
            "id": 11,
            "nodeType": "FunctionDefinition",
            "src": "439:32:0",
            "nodes": [],
            "functionSelector": "da4836e9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "grantAccess",
            "nameLocation": "448:11:0",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "459:2:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "470:0:0"
            },
            "scope": 12,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IPatientManagement",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          12
        ],
        "name": "IPatientManagement",
        "nameLocation": "414:18:0",
        "scope": 84,
        "usedErrors": []
      },
      {
        "id": 83,
        "nodeType": "ContractDefinition",
        "src": "475:801:0",
        "nodes": [
          {
            "id": 19,
            "nodeType": "VariableDeclaration",
            "src": "516:62:0",
            "nodes": [],
            "constant": true,
            "functionSelector": "fec331f2",
            "mutability": "constant",
            "name": "DOCTOR_ROLE",
            "nameLocation": "540:11:0",
            "scope": 83,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 15,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "516:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "444f43544f525f524f4c45",
                  "id": 17,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "564:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f",
                    "typeString": "literal_string \"DOCTOR_ROLE\""
                  },
                  "value": "DOCTOR_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f",
                    "typeString": "literal_string \"DOCTOR_ROLE\""
                  }
                ],
                "id": 16,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "554:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 18,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "554:24:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29,
            "nodeType": "FunctionDefinition",
            "src": "585:73:0",
            "nodes": [],
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "599:59:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "620:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 24,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "640:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "644:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "640:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 389,
                      "src": "609:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "609:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "609:42:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "596:2:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "599:0:0"
            },
            "scope": 83,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34,
            "nodeType": "StructDefinition",
            "src": "664:76:0",
            "nodes": [],
            "canonicalName": "MedicalX.Doctor",
            "members": [
              {
                "constant": false,
                "id": 31,
                "mutability": "mutable",
                "name": "doctorName",
                "nameLocation": "695:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "688:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 30,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "688:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "contactInfo",
                "nameLocation": "722:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "715:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 32,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "715:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Doctor",
            "nameLocation": "671:6:0",
            "scope": 83,
            "visibility": "public"
          },
          {
            "id": 39,
            "nodeType": "VariableDeclaration",
            "src": "746:41:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "a9583c22",
            "mutability": "mutable",
            "name": "doctors",
            "nameLocation": "780:7:0",
            "scope": 83,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$34_storage_$",
              "typeString": "mapping(address => struct MedicalX.Doctor)"
            },
            "typeName": {
              "id": 38,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 35,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "754:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "746:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$34_storage_$",
                "typeString": "mapping(address => struct MedicalX.Doctor)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 37,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 36,
                  "name": "Doctor",
                  "nameLocations": [
                    "765:6:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34,
                  "src": "765:6:0"
                },
                "referencedDeclaration": 34,
                "src": "765:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Doctor_$34_storage_ptr",
                  "typeString": "struct MedicalX.Doctor"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 57,
            "nodeType": "FunctionDefinition",
            "src": "794:182:0",
            "nodes": [],
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "904:72:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 46,
                        "name": "doctors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "914:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Doctor_$34_storage_$",
                          "typeString": "mapping(address => struct MedicalX.Doctor storage ref)"
                        }
                      },
                      "id": 49,
                      "indexExpression": {
                        "expression": {
                          "id": 47,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "922:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "926:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "922:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "914:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Doctor_$34_storage",
                        "typeString": "struct MedicalX.Doctor storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 51,
                          "name": "_doctorName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "943:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 52,
                          "name": "_contactInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "956:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 50,
                        "name": "Doctor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "936:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Doctor_$34_storage_ptr_$",
                          "typeString": "type(struct MedicalX.Doctor storage pointer)"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "936:33:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Doctor_$34_memory_ptr",
                        "typeString": "struct MedicalX.Doctor memory"
                      }
                    },
                    "src": "914:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Doctor_$34_storage",
                      "typeString": "struct MedicalX.Doctor storage ref"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "914:55:0"
                }
              ]
            },
            "functionSelector": "833b46bb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerDoctor",
            "nameLocation": "803:14:0",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "_doctorName",
                  "nameLocation": "841:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "827:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "827:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "_contactInfo",
                  "nameLocation": "876:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "862:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "862:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "817:77:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "904:0:0"
            },
            "scope": 83,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 82,
            "nodeType": "FunctionDefinition",
            "src": "982:292:0",
            "nodes": [],
            "body": {
              "id": 81,
              "nodeType": "Block",
              "src": "1016:258:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 62,
                            "name": "DOCTOR_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "1042:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 63,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1055:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 64,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1059:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1055:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 61,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 245,
                          "src": "1034:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1034:32:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f74206120646f63746f72",
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1068:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a1d57f8f823a968e9420c38c810d99ea42e428f83c76cc55905a76f083787f8",
                          "typeString": "literal_string \"Caller is not a doctor\""
                        },
                        "value": "Caller is not a doctor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a1d57f8f823a968e9420c38c810d99ea42e428f83c76cc55905a76f083787f8",
                          "typeString": "literal_string \"Caller is not a doctor\""
                        }
                      ],
                      "id": 60,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1026:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1026:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1026:67:0"
                },
                {
                  "assignments": [
                    71
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 71,
                      "mutability": "mutable",
                      "name": "patientManagement",
                      "nameLocation": "1122:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 81,
                      "src": "1103:36:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPatientManagement_$12",
                        "typeString": "contract IPatientManagement"
                      },
                      "typeName": {
                        "id": 70,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 69,
                          "name": "IPatientManagement",
                          "nameLocations": [
                            "1103:18:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12,
                          "src": "1103:18:0"
                        },
                        "referencedDeclaration": 12,
                        "src": "1103:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPatientManagement_$12",
                          "typeString": "contract IPatientManagement"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "307835466244423233313536373861666563623336376630333264393346363432663634313830616133",
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1174:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x5FbDB2315678afecb367f032d93F642f64180aa3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72,
                      "name": "IPatientManagement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1142:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IPatientManagement_$12_$",
                        "typeString": "type(contract IPatientManagement)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1142:84:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPatientManagement_$12",
                      "typeString": "contract IPatientManagement"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1103:123:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 76,
                        "name": "patientManagement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "1236:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPatientManagement_$12",
                          "typeString": "contract IPatientManagement"
                        }
                      },
                      "id": 78,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1254:11:0",
                      "memberName": "grantAccess",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "1236:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1236:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "1236:31:0"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestAccess",
            "nameLocation": "991:13:0",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1004:2:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1016:0:0"
            },
            "scope": 83,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13,
              "name": "AccessControl",
              "nameLocations": [
                "496:13:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 481,
              "src": "496:13:0"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "496:13:0"
          }
        ],
        "canonicalName": "MedicalX",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          83,
          481,
          2505,
          2517,
          554,
          2178
        ],
        "name": "MedicalX",
        "nameLocation": "484:8:0",
        "scope": 84,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 0
}