{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PATIENT_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "grantAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "patients",
      "outputs": [
        {
          "internalType": "string",
          "name": "patientName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "contactInfo",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_patientName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_contactInfo",
          "type": "string"
        }
      ],
      "name": "registerPatient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060018054336001600160a01b03199182168117909255600280549091168217905561003e90600090610043565b6100ef565b61004d8282610051565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1661004d576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556100ab3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610cd4806100fe6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806380911fa41161007157806380911fa41461015057806391d1485414610163578063a217fddf14610176578063ac5cb97d1461017e578063d547741f146101a5578063da4836e9146101b857600080fd5b806301ffc9a7146100ae5780630869cfbc146100d6578063248a9ca3146100f75780632f2ff15d1461012857806336568abe1461013d575b600080fd5b6100c16100bc366004610836565b6101c0565b60405190151581526020015b60405180910390f35b6100e96100e436600461087c565b6101f7565b6040516100cd9291906108e7565b61011a610105366004610915565b60009081526020819052604090206001015490565b6040519081526020016100cd565b61013b61013636600461092e565b610323565b005b61013b61014b36600461092e565b61034d565b61013b61015e3660046109fd565b6103d0565b6100c161017136600461092e565b610428565b61011a600081565b61011a7f72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed81565b61013b6101b336600461092e565b610451565b61013b610476565b60006001600160e01b03198216637965db0b60e01b14806101f157506301ffc9a760e01b6001600160e01b03198316145b92915050565b60036020526000908152604090208054819061021290610a61565b80601f016020809104026020016040519081016040528092919081815260200182805461023e90610a61565b801561028b5780601f106102605761010080835404028352916020019161028b565b820191906000526020600020905b81548152906001019060200180831161026e57829003601f168201915b5050505050908060010180546102a090610a61565b80601f01602080910402602001604051908101604052809291908181526020018280546102cc90610a61565b80156103195780601f106102ee57610100808354040283529160200191610319565b820191906000526020600020905b8154815290600101906020018083116102fc57829003601f168201915b5050505050905082565b60008281526020819052604090206001015461033e81610532565b610348838361053f565b505050565b6001600160a01b03811633146103c25760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6103cc82826105c3565b5050565b60408051808201825283815260208082018490526001546001600160a01b031660009081526003909152919091208151819061040c9082610ae9565b50602082015160018201906104219082610ae9565b5050505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60008281526020819052604090206001015461046c81610532565b61034883836105c3565b6001546104ad907f72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed906001600160a01b0316610428565b6104f95760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420612070617469656e7400000000000000000060448201526064016103b9565b600154610530907f72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed906001600160a01b0316610323565b565b61053c8133610628565b50565b6105498282610428565b6103cc576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561057f3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6105cd8282610428565b156103cc576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6106328282610428565b6103cc5761063f81610681565b61064a836020610693565b60405160200161065b929190610ba9565b60408051601f198184030181529082905262461bcd60e51b82526103b991600401610c1e565b60606101f16001600160a01b03831660145b606060006106a2836002610c47565b6106ad906002610c5e565b67ffffffffffffffff8111156106c5576106c561095a565b6040519080825280601f01601f1916602001820160405280156106ef576020820181803683370190505b509050600360fc1b8160008151811061070a5761070a610c71565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061073957610739610c71565b60200101906001600160f81b031916908160001a905350600061075d846002610c47565b610768906001610c5e565b90505b60018111156107e0576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061079c5761079c610c71565b1a60f81b8282815181106107b2576107b2610c71565b60200101906001600160f81b031916908160001a90535060049490941c936107d981610c87565b905061076b565b50831561082f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016103b9565b9392505050565b60006020828403121561084857600080fd5b81356001600160e01b03198116811461082f57600080fd5b80356001600160a01b038116811461087757600080fd5b919050565b60006020828403121561088e57600080fd5b61082f82610860565b60005b838110156108b257818101518382015260200161089a565b50506000910152565b600081518084526108d3816020860160208601610897565b601f01601f19169290920160200192915050565b6040815260006108fa60408301856108bb565b828103602084015261090c81856108bb565b95945050505050565b60006020828403121561092757600080fd5b5035919050565b6000806040838503121561094157600080fd5b8235915061095160208401610860565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261098157600080fd5b813567ffffffffffffffff8082111561099c5761099c61095a565b604051601f8301601f19908116603f011681019082821181831017156109c4576109c461095a565b816040528381528660208588010111156109dd57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610a1057600080fd5b823567ffffffffffffffff80821115610a2857600080fd5b610a3486838701610970565b93506020850135915080821115610a4a57600080fd5b50610a5785828601610970565b9150509250929050565b600181811c90821680610a7557607f821691505b602082108103610a9557634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561034857600081815260208120601f850160051c81016020861015610ac25750805b601f850160051c820191505b81811015610ae157828155600101610ace565b505050505050565b815167ffffffffffffffff811115610b0357610b0361095a565b610b1781610b118454610a61565b84610a9b565b602080601f831160018114610b4c5760008415610b345750858301515b600019600386901b1c1916600185901b178555610ae1565b600085815260208120601f198616915b82811015610b7b57888601518255948401946001909101908401610b5c565b5085821015610b995787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610be1816017850160208801610897565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610c12816028840160208801610897565b01602801949350505050565b60208152600061082f60208301846108bb565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176101f1576101f1610c31565b808201808211156101f1576101f1610c31565b634e487b7160e01b600052603260045260246000fd5b600081610c9657610c96610c31565b50600019019056fea2646970667358221220f9874ca843be54d39b26e1719771a5f446a55b831937af8e10ed87c7c2e23ab364736f6c63430008130033",
    "sourceMap": "379:765:1:-:0;;;540:121;;;;;;;;;-1:-1:-1;564:5:1;:18;;572:10;-1:-1:-1;;;;;;564:18:1;;;;;;;;592:7;:15;;;;;;;;;617:37;;-1:-1:-1;;617:10:1;:37::i;:::-;379:765;;6937:110:2;7015:25;7026:4;7032:7;7015:10;:25::i;:::-;6937:110;;:::o;7587:233::-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:2;;;;;;;;;;;;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:2;;;;;;;;;:36;;-1:-1:-1;;7708:36:2;7740:4;7708:36;;;7790:12;719:10:13;;640:96;7790:12:2;-1:-1:-1;;;;;7763:40:2;7781:7;-1:-1:-1;;;;;7763:40:2;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;379:765:1:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c806380911fa41161007157806380911fa41461015057806391d1485414610163578063a217fddf14610176578063ac5cb97d1461017e578063d547741f146101a5578063da4836e9146101b857600080fd5b806301ffc9a7146100ae5780630869cfbc146100d6578063248a9ca3146100f75780632f2ff15d1461012857806336568abe1461013d575b600080fd5b6100c16100bc366004610836565b6101c0565b60405190151581526020015b60405180910390f35b6100e96100e436600461087c565b6101f7565b6040516100cd9291906108e7565b61011a610105366004610915565b60009081526020819052604090206001015490565b6040519081526020016100cd565b61013b61013636600461092e565b610323565b005b61013b61014b36600461092e565b61034d565b61013b61015e3660046109fd565b6103d0565b6100c161017136600461092e565b610428565b61011a600081565b61011a7f72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed81565b61013b6101b336600461092e565b610451565b61013b610476565b60006001600160e01b03198216637965db0b60e01b14806101f157506301ffc9a760e01b6001600160e01b03198316145b92915050565b60036020526000908152604090208054819061021290610a61565b80601f016020809104026020016040519081016040528092919081815260200182805461023e90610a61565b801561028b5780601f106102605761010080835404028352916020019161028b565b820191906000526020600020905b81548152906001019060200180831161026e57829003601f168201915b5050505050908060010180546102a090610a61565b80601f01602080910402602001604051908101604052809291908181526020018280546102cc90610a61565b80156103195780601f106102ee57610100808354040283529160200191610319565b820191906000526020600020905b8154815290600101906020018083116102fc57829003601f168201915b5050505050905082565b60008281526020819052604090206001015461033e81610532565b610348838361053f565b505050565b6001600160a01b03811633146103c25760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6103cc82826105c3565b5050565b60408051808201825283815260208082018490526001546001600160a01b031660009081526003909152919091208151819061040c9082610ae9565b50602082015160018201906104219082610ae9565b5050505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60008281526020819052604090206001015461046c81610532565b61034883836105c3565b6001546104ad907f72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed906001600160a01b0316610428565b6104f95760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420612070617469656e7400000000000000000060448201526064016103b9565b600154610530907f72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed906001600160a01b0316610323565b565b61053c8133610628565b50565b6105498282610428565b6103cc576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561057f3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6105cd8282610428565b156103cc576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6106328282610428565b6103cc5761063f81610681565b61064a836020610693565b60405160200161065b929190610ba9565b60408051601f198184030181529082905262461bcd60e51b82526103b991600401610c1e565b60606101f16001600160a01b03831660145b606060006106a2836002610c47565b6106ad906002610c5e565b67ffffffffffffffff8111156106c5576106c561095a565b6040519080825280601f01601f1916602001820160405280156106ef576020820181803683370190505b509050600360fc1b8160008151811061070a5761070a610c71565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061073957610739610c71565b60200101906001600160f81b031916908160001a905350600061075d846002610c47565b610768906001610c5e565b90505b60018111156107e0576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061079c5761079c610c71565b1a60f81b8282815181106107b2576107b2610c71565b60200101906001600160f81b031916908160001a90535060049490941c936107d981610c87565b905061076b565b50831561082f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016103b9565b9392505050565b60006020828403121561084857600080fd5b81356001600160e01b03198116811461082f57600080fd5b80356001600160a01b038116811461087757600080fd5b919050565b60006020828403121561088e57600080fd5b61082f82610860565b60005b838110156108b257818101518382015260200161089a565b50506000910152565b600081518084526108d3816020860160208601610897565b601f01601f19169290920160200192915050565b6040815260006108fa60408301856108bb565b828103602084015261090c81856108bb565b95945050505050565b60006020828403121561092757600080fd5b5035919050565b6000806040838503121561094157600080fd5b8235915061095160208401610860565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261098157600080fd5b813567ffffffffffffffff8082111561099c5761099c61095a565b604051601f8301601f19908116603f011681019082821181831017156109c4576109c461095a565b816040528381528660208588010111156109dd57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610a1057600080fd5b823567ffffffffffffffff80821115610a2857600080fd5b610a3486838701610970565b93506020850135915080821115610a4a57600080fd5b50610a5785828601610970565b9150509250929050565b600181811c90821680610a7557607f821691505b602082108103610a9557634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561034857600081815260208120601f850160051c81016020861015610ac25750805b601f850160051c820191505b81811015610ae157828155600101610ace565b505050505050565b815167ffffffffffffffff811115610b0357610b0361095a565b610b1781610b118454610a61565b84610a9b565b602080601f831160018114610b4c5760008415610b345750858301515b600019600386901b1c1916600185901b178555610ae1565b600085815260208120601f198616915b82811015610b7b57888601518255948401946001909101908401610b5c565b5085821015610b995787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610be1816017850160208801610897565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610c12816028840160208801610897565b01602801949350505050565b60208152600061082f60208301846108bb565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176101f1576101f1610c31565b808201808211156101f1576101f1610c31565b634e487b7160e01b600052603260045260246000fd5b600081610c9657610c96610c31565b50600019019056fea2646970667358221220f9874ca843be54d39b26e1719771a5f446a55b831937af8e10ed87c7c2e23ab364736f6c63430008130033",
    "sourceMap": "379:765:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:2;;;;;;:::i;:::-;;:::i;:::-;;;470:14:21;;463:22;445:41;;433:2;418:18;2732:202:2;;;;;;;;751:43:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;4504:129:2:-;;;;;;:::i;:::-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129;;;;2116:25:21;;;2104:2;2089:18;4504:129:2;1970:177:21;4929:145:2;;;;;;:::i;:::-;;:::i;:::-;;6038:214;;;;;;:::i;:::-;;:::i;801:182:1:-;;;;;;:::i;:::-;;:::i;3021:145:2:-;;;;;;:::i;:::-;;:::i;2153:49::-;;2198:4;2153:49;;429:64:1;;468:25;429:64;;5354:147:2;;;;;;:::i;:::-;;:::i;989:153:1:-;;;:::i;2732:202:2:-;2817:4;-1:-1:-1;;;;;;2840:47:2;;-1:-1:-1;;;2840:47:2;;:87;;-1:-1:-1;;;;;;;;;;937:40:16;;;2891:36:2;2833:94;2732:202;-1:-1:-1;;2732:202:2:o;751:43:1:-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4929:145:2:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;6038:214::-;-1:-1:-1;;;;;6133:23:2;;719:10:13;6133:23:2;6125:83;;;;-1:-1:-1;;;6125:83:2;;4402:2:21;6125:83:2;;;4384:21:21;4441:2;4421:18;;;4414:30;4480:34;4460:18;;;4453:62;-1:-1:-1;;;4531:18:21;;;4524:45;4586:19;;6125:83:2;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;801:182:1:-;941:35;;;;;;;;;;;;;;;;;;932:5;;-1:-1:-1;;;;;932:5:1;-1:-1:-1;923:15:1;;;:8;:15;;;;;;;:53;;:15;;:53;;:15;:53;:::i;:::-;-1:-1:-1;923:53:1;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;801:182:1:o;3021:145:2:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:2;;;;;;;;;;;;;;;3021:145::o;5354:147::-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;989:153:1:-:0;1061:5;;1039:28;;468:25;;-1:-1:-1;;;;;1061:5:1;1039:7;:28::i;:::-;1031:64;;;;-1:-1:-1;;;1031:64:1;;7022:2:21;1031:64:1;;;7004:21:21;7061:2;7041:18;;;7034:30;7100:25;7080:18;;;7073:53;7143:18;;1031:64:1;6820:347:21;1031:64:1;1129:5;;1105:30;;468:25;;-1:-1:-1;;;;;1129:5:1;1105:9;:30::i;:::-;989:153::o;3460:103:2:-;3526:30;3537:4;719:10:13;3526::2;:30::i;:::-;3460:103;:::o;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:2;;;;;;;;;:36;;-1:-1:-1;;7708:36:2;7740:4;7708:36;;;7790:12;719:10:13;;640:96;7790:12:2;-1:-1:-1;;;;;7763:40:2;7781:7;-1:-1:-1;;;;;7763:40:2;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:2;;;;;;;;;;:37;;-1:-1:-1;;8112:37:2;;;8168:40;719:10:13;;8112:12:2;;8168:40;;8144:5;8168:40;7991:234;;:::o;3844:479::-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:2;;;;;;;;;;-1:-1:-1;;;3970:336:2;;;;;;;:::i;2407:149:15:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:15;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:15;;1918:47;;-1:-1:-1;;;1975:6:15;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:15;;;;;;;;;-1:-1:-1;;;2000:6:15;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:15;;;;;;;;-1:-1:-1;2030:9:15;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:15;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:15;;;;;;;;-1:-1:-1;2141:1:15;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:15;;2162:55;;;;-1:-1:-1;;;2162:55:15;;9124:2:21;2162:55:15;;;9106:21:21;;;9143:18;;;9136:30;9202:34;9182:18;;;9175:62;9254:18;;2162:55:15;8922:356:21;2162:55:15;2241:6;1818:437;-1:-1:-1;;;1818:437:15:o;14:286:21:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:21;;209:43;;199:71;;266:1;263;256:12;497:173;565:20;;-1:-1:-1;;;;;614:31:21;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:186::-;734:6;787:2;775:9;766:7;762:23;758:32;755:52;;;803:1;800;793:12;755:52;826:29;845:9;826:29;:::i;866:250::-;951:1;961:113;975:6;972:1;969:13;961:113;;;1051:11;;;1045:18;1032:11;;;1025:39;997:2;990:10;961:113;;;-1:-1:-1;;1108:1:21;1090:16;;1083:27;866:250::o;1121:271::-;1163:3;1201:5;1195:12;1228:6;1223:3;1216:19;1244:76;1313:6;1306:4;1301:3;1297:14;1290:4;1283:5;1279:16;1244:76;:::i;:::-;1374:2;1353:15;-1:-1:-1;;1349:29:21;1340:39;;;;1381:4;1336:50;;1121:271;-1:-1:-1;;1121:271:21:o;1397:383::-;1594:2;1583:9;1576:21;1557:4;1620:45;1661:2;1650:9;1646:18;1638:6;1620:45;:::i;:::-;1713:9;1705:6;1701:22;1696:2;1685:9;1681:18;1674:50;1741:33;1767:6;1759;1741:33;:::i;:::-;1733:41;1397:383;-1:-1:-1;;;;;1397:383:21:o;1785:180::-;1844:6;1897:2;1885:9;1876:7;1872:23;1868:32;1865:52;;;1913:1;1910;1903:12;1865:52;-1:-1:-1;1936:23:21;;1785:180;-1:-1:-1;1785:180:21:o;2152:254::-;2220:6;2228;2281:2;2269:9;2260:7;2256:23;2252:32;2249:52;;;2297:1;2294;2287:12;2249:52;2333:9;2320:23;2310:33;;2362:38;2396:2;2385:9;2381:18;2362:38;:::i;:::-;2352:48;;2152:254;;;;;:::o;2411:127::-;2472:10;2467:3;2463:20;2460:1;2453:31;2503:4;2500:1;2493:15;2527:4;2524:1;2517:15;2543:719;2586:5;2639:3;2632:4;2624:6;2620:17;2616:27;2606:55;;2657:1;2654;2647:12;2606:55;2693:6;2680:20;2719:18;2756:2;2752;2749:10;2746:36;;;2762:18;;:::i;:::-;2837:2;2831:9;2805:2;2891:13;;-1:-1:-1;;2887:22:21;;;2911:2;2883:31;2879:40;2867:53;;;2935:18;;;2955:22;;;2932:46;2929:72;;;2981:18;;:::i;:::-;3021:10;3017:2;3010:22;3056:2;3048:6;3041:18;3102:3;3095:4;3090:2;3082:6;3078:15;3074:26;3071:35;3068:55;;;3119:1;3116;3109:12;3068:55;3183:2;3176:4;3168:6;3164:17;3157:4;3149:6;3145:17;3132:54;3230:1;3223:4;3218:2;3210:6;3206:15;3202:26;3195:37;3250:6;3241:15;;;;;;2543:719;;;;:::o;3267:543::-;3355:6;3363;3416:2;3404:9;3395:7;3391:23;3387:32;3384:52;;;3432:1;3429;3422:12;3384:52;3472:9;3459:23;3501:18;3542:2;3534:6;3531:14;3528:34;;;3558:1;3555;3548:12;3528:34;3581:50;3623:7;3614:6;3603:9;3599:22;3581:50;:::i;:::-;3571:60;;3684:2;3673:9;3669:18;3656:32;3640:48;;3713:2;3703:8;3700:16;3697:36;;;3729:1;3726;3719:12;3697:36;;3752:52;3796:7;3785:8;3774:9;3770:24;3752:52;:::i;:::-;3742:62;;;3267:543;;;;;:::o;3815:380::-;3894:1;3890:12;;;;3937;;;3958:61;;4012:4;4004:6;4000:17;3990:27;;3958:61;4065:2;4057:6;4054:14;4034:18;4031:38;4028:161;;4111:10;4106:3;4102:20;4099:1;4092:31;4146:4;4143:1;4136:15;4174:4;4171:1;4164:15;4028:161;;3815:380;;;:::o;4742:545::-;4844:2;4839:3;4836:11;4833:448;;;4880:1;4905:5;4901:2;4894:17;4950:4;4946:2;4936:19;5020:2;5008:10;5004:19;5001:1;4997:27;4991:4;4987:38;5056:4;5044:10;5041:20;5038:47;;;-1:-1:-1;5079:4:21;5038:47;5134:2;5129:3;5125:12;5122:1;5118:20;5112:4;5108:31;5098:41;;5189:82;5207:2;5200:5;5197:13;5189:82;;;5252:17;;;5233:1;5222:13;5189:82;;;5193:3;;;4742:545;;;:::o;5463:1352::-;5589:3;5583:10;5616:18;5608:6;5605:30;5602:56;;;5638:18;;:::i;:::-;5667:97;5757:6;5717:38;5749:4;5743:11;5717:38;:::i;:::-;5711:4;5667:97;:::i;:::-;5819:4;;5883:2;5872:14;;5900:1;5895:663;;;;6602:1;6619:6;6616:89;;;-1:-1:-1;6671:19:21;;;6665:26;6616:89;-1:-1:-1;;5420:1:21;5416:11;;;5412:24;5408:29;5398:40;5444:1;5440:11;;;5395:57;6718:81;;5865:944;;5895:663;4689:1;4682:14;;;4726:4;4713:18;;-1:-1:-1;;5931:20:21;;;6049:236;6063:7;6060:1;6057:14;6049:236;;;6152:19;;;6146:26;6131:42;;6244:27;;;;6212:1;6200:14;;;;6079:19;;6049:236;;;6053:3;6313:6;6304:7;6301:19;6298:201;;;6374:19;;;6368:26;-1:-1:-1;;6457:1:21;6453:14;;;6469:3;6449:24;6445:37;6441:42;6426:58;6411:74;;6298:201;-1:-1:-1;;;;;6545:1:21;6529:14;;;6525:22;6512:36;;-1:-1:-1;5463:1352:21:o;7172:812::-;7583:25;7578:3;7571:38;7553:3;7638:6;7632:13;7654:75;7722:6;7717:2;7712:3;7708:12;7701:4;7693:6;7689:17;7654:75;:::i;:::-;-1:-1:-1;;;7788:2:21;7748:16;;;7780:11;;;7773:40;7838:13;;7860:76;7838:13;7922:2;7914:11;;7907:4;7895:17;;7860:76;:::i;:::-;7956:17;7975:2;7952:26;;7172:812;-1:-1:-1;;;;7172:812:21:o;7989:220::-;8138:2;8127:9;8120:21;8101:4;8158:45;8199:2;8188:9;8184:18;8176:6;8158:45;:::i;8214:127::-;8275:10;8270:3;8266:20;8263:1;8256:31;8306:4;8303:1;8296:15;8330:4;8327:1;8320:15;8346:168;8419:9;;;8450;;8467:15;;;8461:22;;8447:37;8437:71;;8488:18;;:::i;8519:125::-;8584:9;;;8605:10;;;8602:36;;;8618:18;;:::i;8649:127::-;8710:10;8705:3;8701:20;8698:1;8691:31;8741:4;8738:1;8731:15;8765:4;8762:1;8755:15;8781:136;8820:3;8848:5;8838:39;;8857:18;;:::i;:::-;-1:-1:-1;;;8893:18:21;;8781:136::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "PATIENT_ROLE()": "ac5cb97d",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantAccess()": "da4836e9",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "patients(address)": "0869cfbc",
    "registerPatient(string,string)": "80911fa4",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PATIENT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"grantAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"patients\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"patientName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contactInfo\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_patientName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contactInfo\",\"type\":\"string\"}],\"name\":\"registerPatient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PatientManagement.sol\":\"PatientManagement\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/PatientManagement.sol\":{\"keccak256\":\"0x91609bb059c879b82391454aa46079751aac8fa74666ca7a82c04faca8a687d5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9a75b0a7af0274394930d5845008aaca81b767ee439f1a07a94aeb099dbfec24\",\"dweb:/ipfs/QmYqcryW4943eAb5ffHKFzR3Lz7kTzew59e292ZfP7xbTq\"]},\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"node_modules/hardhat/console.sol\":{\"keccak256\":\"0x7434453e6d3b7d0e5d0eb7846ffdbc27f0ccf3b163591263739b628074dc103a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49355f780520494d1d5a0f01858385e51bb5280ce0ecfb960f16995065dca395\",\"dweb:/ipfs/QmSwJ6C5QLz6xKeQZS8wbwjU1KxRFTYfwbGmtzisd5sRW4\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PATIENT_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantAccess"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "patients",
          "outputs": [
            {
              "internalType": "string",
              "name": "patientName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "contactInfo",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_patientName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_contactInfo",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerPatient"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/PatientManagement.sol": "PatientManagement"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/PatientManagement.sol": {
        "keccak256": "0x91609bb059c879b82391454aa46079751aac8fa74666ca7a82c04faca8a687d5",
        "urls": [
          "bzz-raw://9a75b0a7af0274394930d5845008aaca81b767ee439f1a07a94aeb099dbfec24",
          "dweb:/ipfs/QmYqcryW4943eAb5ffHKFzR3Lz7kTzew59e292ZfP7xbTq"
        ],
        "license": "UNLICENSED"
      },
      "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
        "keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
        "urls": [
          "bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
          "dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a",
        "urls": [
          "bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb",
          "dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol": {
        "keccak256": "0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4",
        "urls": [
          "bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6",
          "dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol": {
        "keccak256": "0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c",
        "urls": [
          "bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8",
          "dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff",
        "urls": [
          "bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005",
          "dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
        "keccak256": "0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37",
        "urls": [
          "bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f",
          "dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "node_modules/hardhat/console.sol": {
        "keccak256": "0x7434453e6d3b7d0e5d0eb7846ffdbc27f0ccf3b163591263739b628074dc103a",
        "urls": [
          "bzz-raw://49355f780520494d1d5a0f01858385e51bb5280ce0ecfb960f16995065dca395",
          "dweb:/ipfs/QmSwJ6C5QLz6xKeQZS8wbwjU1KxRFTYfwbGmtzisd5sRW4"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/PatientManagement.sol",
    "id": 166,
    "exportedSymbols": {
      "AccessControl": [
        481
      ],
      "Address": [
        2156
      ],
      "Context": [
        2178
      ],
      "Counters": [
        2252
      ],
      "ERC165": [
        2505
      ],
      "ERC721": [
        1509
      ],
      "ERC721URIStorage": [
        1799
      ],
      "IAccessControl": [
        554
      ],
      "IERC165": [
        2517
      ],
      "IERC4906": [
        579
      ],
      "IERC721": [
        1625
      ],
      "IERC721Metadata": [
        1826
      ],
      "IERC721Receiver": [
        1643
      ],
      "Math": [
        3383
      ],
      "PatientManagement": [
        165
      ],
      "SignedMath": [
        3488
      ],
      "Strings": [
        2481
      ],
      "console": [
        11573
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1106:1",
    "nodes": [
      {
        "id": 85,
        "nodeType": "PragmaDirective",
        "src": "39:24:1",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 86,
        "nodeType": "ImportDirective",
        "src": "65:52:1",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 166,
        "sourceUnit": 2253,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87,
        "nodeType": "ImportDirective",
        "src": "118:78:1",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 166,
        "sourceUnit": 1800,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 88,
        "nodeType": "ImportDirective",
        "src": "197:57:1",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 166,
        "sourceUnit": 1510,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89,
        "nodeType": "ImportDirective",
        "src": "255:58:1",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 166,
        "sourceUnit": 482,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 90,
        "nodeType": "ImportDirective",
        "src": "314:29:1",
        "nodes": [],
        "absolutePath": "node_modules/hardhat/console.sol",
        "file": "hardhat/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 166,
        "sourceUnit": 11574,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 91,
        "nodeType": "ImportDirective",
        "src": "344:33:1",
        "nodes": [],
        "absolutePath": "contracts/PatientManagement.sol",
        "file": "./PatientManagement.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 166,
        "sourceUnit": 166,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 165,
        "nodeType": "ContractDefinition",
        "src": "379:765:1",
        "nodes": [
          {
            "id": 98,
            "nodeType": "VariableDeclaration",
            "src": "429:64:1",
            "nodes": [],
            "constant": true,
            "functionSelector": "ac5cb97d",
            "mutability": "constant",
            "name": "PATIENT_ROLE",
            "nameLocation": "453:12:1",
            "scope": 165,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 94,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "429:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "50415449454e545f524f4c45",
                  "id": 96,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "478:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed",
                    "typeString": "literal_string \"PATIENT_ROLE\""
                  },
                  "value": "PATIENT_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed",
                    "typeString": "literal_string \"PATIENT_ROLE\""
                  }
                ],
                "id": 95,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "468:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 97,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "468:25:1",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 100,
            "nodeType": "VariableDeclaration",
            "src": "499:13:1",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "507:5:1",
            "scope": 165,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 99,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "499:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 102,
            "nodeType": "VariableDeclaration",
            "src": "518:15:1",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "patient",
            "nameLocation": "526:7:1",
            "scope": 165,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 101,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "518:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 120,
            "nodeType": "FunctionDefinition",
            "src": "540:121:1",
            "nodes": [],
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "554:107:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 105,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "564:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 106,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "572:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "576:6:1",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "572:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "564:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "564:18:1"
                },
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 110,
                      "name": "patient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "592:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 111,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "602:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "592:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "592:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 115,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "628:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 116,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "648:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 114,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 389,
                      "src": "617:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "617:37:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "617:37:1"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "551:2:1"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "554:0:1"
            },
            "scope": 165,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 125,
            "nodeType": "StructDefinition",
            "src": "667:78:1",
            "nodes": [],
            "canonicalName": "PatientManagement.Patient",
            "members": [
              {
                "constant": false,
                "id": 122,
                "mutability": "mutable",
                "name": "patientName",
                "nameLocation": "699:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 125,
                "src": "692:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 121,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "692:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 124,
                "mutability": "mutable",
                "name": "contactInfo",
                "nameLocation": "727:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 125,
                "src": "720:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 123,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "720:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Patient",
            "nameLocation": "674:7:1",
            "scope": 165,
            "visibility": "public"
          },
          {
            "id": 130,
            "nodeType": "VariableDeclaration",
            "src": "751:43:1",
            "nodes": [],
            "constant": false,
            "functionSelector": "0869cfbc",
            "mutability": "mutable",
            "name": "patients",
            "nameLocation": "786:8:1",
            "scope": 165,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$125_storage_$",
              "typeString": "mapping(address => struct PatientManagement.Patient)"
            },
            "typeName": {
              "id": 129,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 126,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "759:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "751:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$125_storage_$",
                "typeString": "mapping(address => struct PatientManagement.Patient)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 128,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 127,
                  "name": "Patient",
                  "nameLocations": [
                    "770:7:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 125,
                  "src": "770:7:1"
                },
                "referencedDeclaration": 125,
                "src": "770:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Patient_$125_storage_ptr",
                  "typeString": "struct PatientManagement.Patient"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 147,
            "nodeType": "FunctionDefinition",
            "src": "801:182:1",
            "nodes": [],
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "913:70:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 137,
                        "name": "patients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "923:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$125_storage_$",
                          "typeString": "mapping(address => struct PatientManagement.Patient storage ref)"
                        }
                      },
                      "id": 139,
                      "indexExpression": {
                        "id": 138,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "932:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "923:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patient_$125_storage",
                        "typeString": "struct PatientManagement.Patient storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 141,
                          "name": "_patientName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 132,
                          "src": "949:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 142,
                          "name": "_contactInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 134,
                          "src": "963:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 140,
                        "name": "Patient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "941:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Patient_$125_storage_ptr_$",
                          "typeString": "type(struct PatientManagement.Patient storage pointer)"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "941:35:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patient_$125_memory_ptr",
                        "typeString": "struct PatientManagement.Patient memory"
                      }
                    },
                    "src": "923:53:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Patient_$125_storage",
                      "typeString": "struct PatientManagement.Patient storage ref"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "923:53:1"
                }
              ]
            },
            "functionSelector": "80911fa4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerPatient",
            "nameLocation": "810:15:1",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "_patientName",
                  "nameLocation": "849:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "835:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "_contactInfo",
                  "nameLocation": "885:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "871:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "871:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "825:78:1"
            },
            "returnParameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "913:0:1"
            },
            "scope": 165,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 164,
            "nodeType": "FunctionDefinition",
            "src": "989:153:1",
            "nodes": [],
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "1021:121:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 152,
                            "name": "PATIENT_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "1047:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 153,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "1061:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 151,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 245,
                          "src": "1039:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1039:28:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f7420612070617469656e74",
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1069:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6075072119c882eb93212826f114fbcd13f7c506f1e7d8e62daa2671c0fe785",
                          "typeString": "literal_string \"Caller is not a patient\""
                        },
                        "value": "Caller is not a patient"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6075072119c882eb93212826f114fbcd13f7c506f1e7d8e62daa2671c0fe785",
                          "typeString": "literal_string \"Caller is not a patient\""
                        }
                      ],
                      "id": 150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1031:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1031:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "1031:64:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 159,
                        "name": "PATIENT_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1115:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 160,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "1129:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 158,
                      "name": "grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "1105:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1105:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "1105:30:1"
                }
              ]
            },
            "functionSelector": "da4836e9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "grantAccess",
            "nameLocation": "998:11:1",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1009:2:1"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1021:0:1"
            },
            "scope": 165,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 92,
              "name": "AccessControl",
              "nameLocations": [
                "409:13:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 481,
              "src": "409:13:1"
            },
            "id": 93,
            "nodeType": "InheritanceSpecifier",
            "src": "409:13:1"
          }
        ],
        "canonicalName": "PatientManagement",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          165,
          481,
          2505,
          2517,
          554,
          2178
        ],
        "name": "PatientManagement",
        "nameLocation": "388:17:1",
        "scope": 166,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 1
}